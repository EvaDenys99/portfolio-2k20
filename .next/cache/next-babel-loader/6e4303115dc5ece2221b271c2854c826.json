{"ast":null,"code":"async function fetchAPI(query, {\n  variables\n} = {}) {\n  const res = await fetch(`${process.env.API_URL}/graphql`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error(\"Failed to fetch API\");\n  }\n\n  return json.data;\n}\n\nexport async function getProjects() {\n  const data = await fetchAPI(`query Projects {\n        projects {\n          id\n          title\n          creationDate\n          headImage {\n            url\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }`);\n  return data.projects;\n}\nexport async function getProject() {\n  const data = await fetchAPI(`query Projects($id: ID!) {\n        project(id: $id) {\n          id\n          title\n          bio\n          creationDate\n          headImage {\n            url\n            caption\n          }\n          images {\n            url\n            caption\n          }\n          vids {\n            url\n            caption\n          }\n          categories {\n            id\n            name\n          }\n          team\n          client\n          tools\n          link\n          briefing\n          goal\n          download {\n            url\n            name\n          }\n        }\n      }`);\n  return data.project;\n}\nexport async function getCategories() {\n  const data = await fetchAPI(`query Categories {\n      categories {\n        id\n        name\n      }\n    }`);\n  return data.categories;\n}\nexport async function getCategoryProjects(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n        category(id: $id) {\n          name\n          projects {\n            id\n            title\n            creationDate\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.category.projects;\n}\nexport async function getCategoryArticles(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n        category(id: $id) {\n          name\n          blogs {\n            id\n            title\n            creationdate\n            description\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.category.blogs;\n}","map":{"version":3,"sources":["/Users/evadenys/Desktop/portfolio/development/frontend/lib/api.js"],"names":["fetchAPI","query","variables","res","fetch","process","env","API_URL","method","headers","body","JSON","stringify","json","errors","console","error","Error","data","getProjects","projects","getProject","project","getCategories","categories","getCategoryProjects","id","category","getCategoryArticles","blogs"],"mappings":"AAAA,eAAeA,QAAf,CAAwBC,KAAxB,EAA+B;AAAEC,EAAAA;AAAF,IAAgB,EAA/C,EAAmD;AACjD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,UAAxB,EAAmC;AACxDC,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF+C;AAKxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,MAAAA,KADmB;AAEnBC,MAAAA;AAFmB,KAAf;AALkD,GAAnC,CAAvB;AAWA,QAAMW,IAAI,GAAG,MAAMV,GAAG,CAACU,IAAJ,EAAnB;;AACA,MAAIA,IAAI,CAACC,MAAT,EAAiB;AACfC,IAAAA,OAAO,CAACC,KAAR,CAAcH,IAAI,CAACC,MAAnB;AACA,UAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,SAAOJ,IAAI,CAACK,IAAZ;AACD;;AAED,OAAO,eAAeC,WAAf,GAA6B;AAClC,QAAMD,IAAI,GAAG,MAAMlB,QAAQ,CAAE;;;;;;;;;;;;;QAAF,CAA3B;AAcA,SAAOkB,IAAI,CAACE,QAAZ;AACD;AAED,OAAO,eAAeC,UAAf,GAA4B;AACjC,QAAMH,IAAI,GAAG,MAAMlB,QAAQ,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAF,CAA3B;AAkCA,SAAOkB,IAAI,CAACI,OAAZ;AACD;AAED,OAAO,eAAeC,aAAf,GAA+B;AACpC,QAAML,IAAI,GAAG,MAAMlB,QAAQ,CAAE;;;;;MAAF,CAA3B;AAMA,SAAOkB,IAAI,CAACM,UAAZ;AACD;AAED,OAAO,eAAeC,mBAAf,CAAmCC,EAAnC,EAAuC;AAC5C,QAAMR,IAAI,GAAG,MAAMlB,QAAQ,CACxB;;;;;;;;;;;;;;;;QADwB,EAkBzB;AAAEE,IAAAA,SAAS,EAAE;AAAEwB,MAAAA;AAAF;AAAb,GAlByB,CAA3B;AAoBA,SAAOR,IAAI,CAACS,QAAL,CAAcP,QAArB;AACD;AAED,OAAO,eAAeQ,mBAAf,CAAmCF,EAAnC,EAAuC;AAC5C,QAAMR,IAAI,GAAG,MAAMlB,QAAQ,CACxB;;;;;;;;;;;;;;;;;QADwB,EAmBzB;AAAEE,IAAAA,SAAS,EAAE;AAAEwB,MAAAA;AAAF;AAAb,GAnByB,CAA3B;AAqBA,SAAOR,IAAI,CAACS,QAAL,CAAcE,KAArB;AACD","sourcesContent":["async function fetchAPI(query, { variables } = {}) {\n  const res = await fetch(`${process.env.API_URL}/graphql`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n\n  const json = await res.json();\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error(\"Failed to fetch API\");\n  }\n\n  return json.data;\n}\n\nexport async function getProjects() {\n  const data = await fetchAPI(`query Projects {\n        projects {\n          id\n          title\n          creationDate\n          headImage {\n            url\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }`);\n  return data.projects;\n}\n\nexport async function getProject() {\n  const data = await fetchAPI(`query Projects($id: ID!) {\n        project(id: $id) {\n          id\n          title\n          bio\n          creationDate\n          headImage {\n            url\n            caption\n          }\n          images {\n            url\n            caption\n          }\n          vids {\n            url\n            caption\n          }\n          categories {\n            id\n            name\n          }\n          team\n          client\n          tools\n          link\n          briefing\n          goal\n          download {\n            url\n            name\n          }\n        }\n      }`);\n  return data.project;\n}\n\nexport async function getCategories() {\n  const data = await fetchAPI(`query Categories {\n      categories {\n        id\n        name\n      }\n    }`);\n  return data.categories;\n}\n\nexport async function getCategoryProjects(id) {\n  const data = await fetchAPI(\n    `query Category($id: ID!) {\n        category(id: $id) {\n          name\n          projects {\n            id\n            title\n            creationDate\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`,\n    { variables: { id } }\n  );\n  return data.category.projects;\n}\n\nexport async function getCategoryArticles(id) {\n  const data = await fetchAPI(\n    `query Category($id: ID!) {\n        category(id: $id) {\n          name\n          blogs {\n            id\n            title\n            creationdate\n            description\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`,\n    { variables: { id } }\n  );\n  return data.category.blogs;\n}\n"]},"metadata":{},"sourceType":"module"}