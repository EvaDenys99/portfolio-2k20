{"ast":null,"code":"async function fetchAPI(query, {\n  variables\n} = {}) {\n  const res = await fetch(`${\"https://portfolio-backend-strapi.herokuapp.com\"}/graphql`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error(\"Failed to fetch API\");\n  }\n\n  return json.data;\n}\n\nexport async function getProjects() {\n  const data = await fetchAPI(`query Projects {\n        projects {\n          id\n          title\n          creationDate\n          headImage {\n            url\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }`);\n  return data.projects;\n}\nexport async function getProject(id) {\n  const data = await fetchAPI(`query Projects($id: ID!) {\n        project(id: $id) {\n          id\n          title\n          bio\n          creationDate\n          headImage {\n            url\n            caption\n          }\n          images {\n            url\n            caption\n          }\n          vids {\n            url\n            caption\n          }\n          categories {\n            id\n            name\n          }\n          team\n          client\n          tools\n          link\n          briefing\n          goal\n          download {\n            url\n            name\n          }\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.project;\n}\nexport async function getArticles() {\n  const data = await fetchAPI(`query Blogs {\n        blogs {\n          id\n          title\n          creationdate\n          description\n          headImage {\n            url\n          }\n          categories {\n            id\n            name\n          }\n        }\n      }`);\n  return data.blogs;\n}\nexport async function getArticle(id) {\n  const data = await fetchAPI(`query Blogs($id: ID!) {\n        blog(id: $id) {\n          id\n          title\n          content\n          creationdate\n          headImage {\n            url\n            caption\n          }\n          images {\n            url\n            caption\n          }\n          videos {\n            url\n            caption\n          }\n          categories {\n            id\n            name\n          }\n          createdBy\n          description\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.blog;\n}\nexport async function getCategories() {\n  const data = await fetchAPI(`query Categories {\n      categories {\n        id\n        name\n      }\n    }`);\n  return data.categories;\n}\nexport async function getCategoryProjects(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n        category(id: $id) {\n          name\n          projects {\n            id\n            title\n            creationDate\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.category.projects;\n}\nexport async function getCategoryArticles(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n        category(id: $id) {\n          name\n          blogs {\n            id\n            title\n            creationdate\n            description\n            headImage {\n              url\n            }\n            categories {\n              id\n              name\n            }\n          }\n        }\n      }`, {\n    variables: {\n      id\n    }\n  });\n  return data.category.blogs;\n}","map":null,"metadata":{},"sourceType":"module"}